{"ast":null,"code":"import _classCallCheck from \"/Users/GurlabeD/projects/react-trucker-backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/GurlabeD/projects/react-trucker-backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/GurlabeD/projects/react-trucker-backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/GurlabeD/projects/react-trucker-backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/GurlabeD/projects/react-trucker-backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/GurlabeD/projects/react-trucker-backend/client/src/component/NaughtyList.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Grid, MountNode, Segment } from 'semantic-ui-react';\nexport var NaughtyList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NaughtyList, _Component);\n\n  function NaughtyList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NaughtyList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NaughtyList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      className: '',\n      add: ''\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        className: value\n      });\n    };\n\n    _this.handleRef = function (node) {\n      return _this.setState({\n        node: node\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NaughtyList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var add = function add() {\n        var add = _this2.state.className;\n\n        _this2.setState({\n          add: add + 1\n        });\n      };\n\n      var _this$state = this.state,\n          className = _this$state.className,\n          node = _this$state.node;\n      return React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        placeholder: \"Enter any className to apply...\",\n        onChange: this.handleChange,\n        value: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, node && React.createElement(MountNode, {\n        className: className,\n        node: node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.handleRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"An example node\"))));\n    }\n  }]);\n\n  return NaughtyList;\n}(Component);\nexport default NaughtyList;","map":{"version":3,"sources":["/Users/GurlabeD/projects/react-trucker-backend/client/src/component/NaughtyList.jsx"],"names":["React","Component","Form","Grid","MountNode","Segment","NaughtyList","state","className","add","handleChange","e","value","setState","handleRef","node"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,SAArB,EAAgCC,OAAhC,QAA+C,mBAA/C;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACAC,KADA,GACQ;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,GAAG,EAAE;AAAtB,KADR;;AAAA,UAGAC,YAHA,GAGe,UAACC,CAAD;AAAA,UAAMC,KAAN,QAAMA,KAAN;AAAA,aAAkB,MAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAEI;AAAb,OAAd,CAAlB;AAAA,KAHf;;AAAA,UAKAE,SALA,GAKY,UAAAC,IAAI;AAAA,aAAI,MAAKF,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAJA;AAAF,OAAd,CAAJ;AAAA,KALhB;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAOS;AAAA;;AACT,UAAMN,GAAG,GAAG,eAAM;AACd,YAAIA,GAAG,GAAG,MAAI,CAACF,KAAL,CAAWC,SAArB;;AACA,QAAA,MAAI,CAACK,QAAL,CAAc;AAAEJ,UAAAA,GAAG,EAACA,GAAG,GAAG;AAAZ,SAAd;AAEH,OAJD;;AADS,wBAMmB,KAAKF,KANxB;AAAA,UAMDC,SANC,eAMDA,SANC;AAAA,UAMUO,IANV,eAMUA,IANV;AAST,aACA,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AACA,QAAA,WAAW,EAAC,iCADZ;AAEA,QAAA,QAAQ,EAAE,KAAKL,YAFf;AAGA,QAAA,KAAK,EAAEF,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA,CADA,EAUA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKO,IAAI,IAAI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEP,SAAtB;AAAiC,QAAA,IAAI,EAAEO,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb,EAEI;AAAK,QAAA,GAAG,EAAE,KAAKD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CADA,CAVA,CADA;AAmBC;AAnCD;;AAAA;AAAA,EAAiCb,SAAjC;AAsCA,eAAeK,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Grid, MountNode, Segment } from 'semantic-ui-react'\n\nexport class NaughtyList extends Component {\nstate = { className: '', add: '' }\n\nhandleChange = (e, { value }) => this.setState({ className: value })\n\nhandleRef = node => this.setState({ node })\n\nrender() {   \nconst add = () => {\n    let add = this.state.className;\n    this.setState({ add:add + 1})\n\n}\nconst { className, node } = this.state \n\n\nreturn (\n<Grid columns={2}>\n<Grid.Column>\n<Form>\n    <Form.Input\n    placeholder='Enter any className to apply...'\n    onChange={this.handleChange}\n    value={className}\n    />\n</Form>\n</Grid.Column>\n<Grid.Column>\n<Segment>\n    {node && <MountNode className={className} node={node} />}\n    <div ref={this.handleRef}>An example node</div>\n</Segment>\n</Grid.Column>\n</Grid>\n)\n}\n}\n\nexport default NaughtyList"]},"metadata":{},"sourceType":"module"}